### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

input LocationCreateOneWithoutUserInput {
  connect: LocationWhereUniqueInput
  create: LocationCreateWithoutUserInput
}

input LocationCreateWithoutUserInput {
  latitude: Float!
  longitude: Float!
}

input LocationWhereUniqueInput {
  id: Int
}

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
  createOneUser(data: UserCreateInput!): User!
}

type Post {
  url: String!
}

input PostCreateInput {
  createdAt: DateTime
  sentiment: SentimentCreateOneWithoutPostInput!
  url: String!
  User: UserCreateOneWithoutPostsInput!
}

input PostCreateManyWithoutUserInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutUserInput!]
}

input PostCreateWithoutUserInput {
  createdAt: DateTime
  sentiment: SentimentCreateOneWithoutPostInput!
  url: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  user(where: UserWhereUniqueInput!): User
}

input SentimentCreateOneWithoutPostInput {
  connect: SentimentWhereUniqueInput
  create: SentimentCreateWithoutPostInput
}

input SentimentCreateWithoutPostInput {
  negative: Boolean
  positive: Boolean
}

input SentimentWhereUniqueInput {
  id: Int
}

type User {
  email: String!
}

input UserCreateInput {
  age: Int
  createdAt: DateTime
  email: String!
  location: LocationCreateOneWithoutUserInput!
  posts: PostCreateManyWithoutUserInput
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutPostsInput
}

input UserCreateWithoutPostsInput {
  age: Int
  createdAt: DateTime
  email: String!
  location: LocationCreateOneWithoutUserInput!
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
