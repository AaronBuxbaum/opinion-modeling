name: tests

on:
  pull_request:
    paths-ignore:
      - "**.md"
  push:
    branches:
      - master
      - releases/*
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5433
        ports:
          - 5433:5432
        # Health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules" # ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          # restore-keys: |
          #   ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn lint
      - run: yarn build
      - run: yarn typecheck
      - run: yarn test
      - uses: actions/upload-artifact@v2
        with:
          name: Jest artifacts
          path: junit.xml
      - name: Verify no unstaged changes
        if: runner.os != 'windows'
        run: bash tests/verify-no-unstaged-changes.sh
